---
import BaseLayout from '../../layouts/BaseLayout.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { FOOTER_CONTENT } from '../../lib/footer-content';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  // Get all fair years from CMS
  const fairYears = await getCollection('fair-years');
  
  // Create paths for each active year with custom slug
  return fairYears
    .filter(year => year.data.is_active && year.data.display_status === 'Aktif Fuarlar')
    .map(year => ({
      params: { slug: year.data.page_slug_en || `${year.data.year}-fair-calendar` },
      props: { yearData: year.data }
    }));
}

const { slug } = Astro.params;
const { yearData } = Astro.props;

const locale = 'en';
const footerContent = FOOTER_CONTENT[locale];

// Get dynamic content
const currentYear = yearData.year;
const pageTitle = yearData.page_content?.title_en || `${currentYear} Fair Calendar`;
const pageDescription = yearData.page_content?.description_en || `In ${currentYear}, we bring Turkish companies together with global markets at prestigious fairs we organize worldwide.`;

console.log('ðŸŽ¯ DYNAMIC SLUG EN: Slug param:', slug);
console.log('ðŸŽ¯ DYNAMIC SLUG EN: Year:', currentYear);
console.log('ðŸŽ¯ DYNAMIC SLUG EN: Page title:', pageTitle);

const cmsFairs = yearData.fairs || [];

// Sector translations
const sectorTranslations: Record<string, string> = {
  'Moda ve Tekstil': 'Fashion & Textile',
  'Ev Tekstili ve Dekorasyon': 'Home Textile & Decoration',
  'Mobilya': 'Furniture',
  'GÃ¼zellik ve Kozmetik': 'Beauty & Cosmetics',
  'Enerji': 'Energy',
  'Ä°nÅŸaat': 'Construction',
  'Deri ve KÃ¼rk': 'Leather & Fur',
  'GÃ¼venlik': 'Security',
  'Teknoloji': 'Technology',
  'GÄ±da': 'Food',
  'Otomotiv': 'Automotive',
  'SaÄŸlÄ±k': 'Health',
  'EÄŸitim': 'Education',
  'Spor': 'Sports',
  'Turizm': 'Tourism',
  'DiÄŸer': 'Other'
};

// Convert CMS data to page format
var fairsData: Record<string, any[]> = {};
cmsFairs.forEach((fair: any) => {
  const sector = sectorTranslations[fair.basic_info.sector] || fair.basic_info.sector;
  if (!fairsData[sector]) {
    fairsData[sector] = [];
  }

  // Get representative data
  let representativeData = {
    name: '',
    title: '',
    email: '',
    phone: ''
  };

  if (fair.representative) {
    representativeData = {
      name: fair.representative.name || '',
      title: fair.representative.title_en || fair.representative.title_tr || '',
      email: fair.representative.email || '',
      phone: fair.representative.custom_phone || fair.representative.phone || ''
    };
  }

  fairsData[sector].push({
    id: (fair.basic_info.name_en || fair.basic_info.name_tr).toLowerCase().replace(/\s+/g, '-'),
    name: fair.basic_info.name_en || fair.basic_info.name_tr,
    date: fair.basic_info.date_en || fair.basic_info.date || '',
    location: fair.basic_info.location_en || fair.basic_info.location_tr,
    description: fair.basic_info.description_en || '',
    backgroundImage: fair.visuals?.background_image || '/images/fuarlar-arkaplan.jpg',
    logo: fair.visuals?.logo || '/images/fuarlar-logo.png',
    representative: representativeData,
    hidePhone: fair.representative?.hide_phone || false
  });
});

const sectors = Object.keys(fairsData);
console.log('âœ…', currentYear, 'EN Fairs data converted:', sectors);
---

<BaseLayout title={`${pageTitle} - TÃ¼rkel Fair Organization`} description={`${currentYear} international fair calendar and organizations`} locale={locale}>
  <Header locale={locale} />
  
  <main class="pt-8 pb-16">
    <section class="py-16">
      <div class="mx-auto px-5" style="max-width: calc(100% - 20px); background-color: white; border-radius: 10px; margin: 10px auto;">
        <div class="container mx-auto px-4 lg:px-8">
          
          <!-- Section Header -->
          <div class="text-center mb-12">
            <div class="flex items-center justify-center mb-4">
              <h2 class="text-2xl lg:text-3xl font-bold text-gray-900" style="font-family: 'Radio Canada Big', sans-serif;">
                {pageTitle}
              </h2>
            </div>
            <p class="text-lg text-gray-600 max-w-3xl mx-auto" style="font-family: 'Radio Canada Big', sans-serif;">
              {pageDescription}
            </p>
          </div>

          <!-- Sector Filter Buttons -->
          <div class="flex flex-wrap justify-center gap-4 mb-12">
            <button class="filter-btn active px-6 py-2 rounded-full border-2 border-[#CE1A28] text-[#CE1A28] hover:bg-[#CE1A28] hover:text-white transition-colors font-medium" data-sector="all">
              All
            </button>
            {sectors.map(sector => (
              <button class="filter-btn px-6 py-2 rounded-full border-2 border-gray-300 text-gray-700 hover:border-[#CE1A28] hover:text-[#CE1A28] transition-colors font-medium" data-sector={sector}>
                {sector}
              </button>
            ))}
          </div>

          <!-- Fair Cards Grid -->
          <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="fairsGrid">
            {Object.entries(fairsData).map(([sector, fairs]) =>
              fairs.map((fair) => (
                <div 
                  class="fair-card bg-white rounded-xl shadow-lg overflow-hidden hover:shadow-xl transition-shadow duration-300 h-64"
                  data-sector={sector}
                  style="position: relative; background-size: cover; background-position: center; background-image: url('{fair.backgroundImage}');"
                >
                  <div class="absolute inset-0 bg-gradient-to-t from-black/70 via-black/20 to-transparent"></div>
                  
                  <!-- Logo Container -->
                  <div class="absolute top-4 left-4 right-4 flex justify-center">
                    <div class="bg-white bg-opacity-95 rounded-xl p-4 shadow-lg max-w-[230px] h-32 flex items-center justify-center">
                      <img 
                        src={fair.logo} 
                        alt={`${fair.name} Logo`}
                        class="max-w-full max-h-full object-contain"
                        style="filter: drop-shadow(0 2px 4px rgba(0,0,0,0.1));"
                      />
                    </div>
                  </div>

                  <!-- Content -->
                  <div class="absolute bottom-0 left-0 right-0 p-6 text-white">
                    <div class="space-y-3">
                      <!-- Fair Name and Description -->
                      <div>
                        <h3 class="font-bold text-white leading-tight">
                          {fair.name}
                        </h3>
                        {fair.description && (
                          <p class="text-sm text-gray-200 -mt-1 leading-tight">
                            {fair.description}
                          </p>
                        )}
                      </div>

                      <!-- Date and Location -->
                      <div class="text-sm space-y-1">
                        <div class="flex items-center">
                          <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M6 2a1 1 0 00-1 1v1H4a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V6a2 2 0 00-2-2h-1V3a1 1 0 10-2 0v1H7V3a1 1 0 00-1-1zm0 5a1 1 0 000 2h8a1 1 0 100-2H6z" clip-rule="evenodd"></path>
                          </svg>
                          <span>{fair.date}</span>
                        </div>
                        <div class="flex items-center">
                          <svg class="w-4 h-4 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                            <path fill-rule="evenodd" d="M5.05 4.05a7 7 0 119.9 9.9L10 18.9l-4.95-4.95a7 7 0 010-9.9zM10 11a2 2 0 100-4 2 2 0 000 4z" clip-rule="evenodd"></path>
                          </svg>
                          <span>{fair.location}</span>
                        </div>
                      </div>

                      <!-- Representative Info -->
                      <div class="border-t border-white/30 pt-3" style="max-height: 140px !important; overflow: hidden !important;">
                        <p class="text-xs text-gray-300 mb-2">Representative:</p>
                        <div class="space-y-1">
                          <div class="flex items-center text-sm">
                            <svg class="w-3 h-3 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M10 9a3 3 0 100-6 3 3 0 000 6zm-7 9a7 7 0 1114 0H3z" clip-rule="evenodd"></path>
                            </svg>
                            <span class="font-medium">{fair.representative.name}</span>
                          </div>
                          <div class="flex items-center text-sm">
                            <svg class="w-3 h-3 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                              <path fill-rule="evenodd" d="M6 6V5a3 3 0 013-3h2a3 3 0 013 3v1h2a2 2 0 012 2v6a2 2 0 01-2 2H4a2 2 0 01-2-2V8a2 2 0 012-2h2zM8 5a1 1 0 011-1h2a1 1 0 011 1v1H8V5z" clip-rule="evenodd"></path>
                            </svg>
                            <span class="text-gray-200">{fair.representative.title}</span>
                          </div>
                          <div class="flex items-center text-sm">
                            <svg class="w-3 h-3 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                              <path d="M2.003 5.884L10 9.882l7.997-3.998A2 2 0 0016 4H4a2 2 0 00-1.997 1.884z"></path>
                              <path d="M18 8.118l-8 4-8-4V14a2 2 0 002 2h12a2 2 0 002-2V8.118z"></path>
                            </svg>
                            <a href={`mailto:${fair.representative.email}`} class="text-gray-200 hover:text-white transition-colors">
                              {fair.representative.email}
                            </a>
                          </div>
                          {fair.representative.phone && fair.representative.phone.trim() !== '' && !fair.hidePhone && (
                            <div class="flex items-center text-sm">
                              <svg class="w-3 h-3 mr-2 flex-shrink-0" fill="currentColor" viewBox="0 0 20 20">
                                <path d="M2 3a1 1 0 011-1h2.153a1 1 0 01.986.836l.74 4.435a1 1 0 01-.54 1.06l-1.548.773a11.037 11.037 0 006.105 6.105l.774-1.548a1 1 0 011.059-.54l4.435.74a1 1 0 01.836.986V17a1 1 0 01-1 1h-2C7.82 18 2 12.18 2 5V3z"></path>
                              </svg>
                              <a href={`tel:${fair.representative.phone}`} class="text-gray-200 hover:text-white transition-colors">
                                {fair.representative.phone}
                              </a>
                            </div>
                          )}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              ))
            )}
          </div>
        </div>
      </div>
    </section>
  </main>

  <Footer locale={locale} content={footerContent} />
</BaseLayout>

<style>
  .filter-btn.active {
    background-color: #CE1A28;
    color: white;
    border-color: #CE1A28;
  }

  .fair-card h3 {
    font-size: 1.1rem !important;
    line-height: 1.4 !important;
  }

  .fair-card .h-64 {
    height: 200px !important;
    min-height: 200px !important;
    max-height: 200px !important;
    flex-shrink: 0 !important;
  }

  .fair-card .border-t {
    max-height: 140px !important;
    overflow: hidden !important;
  }

  @media (max-width: 767px) {
    .fair-card h3 {
      font-size: 1rem !important;
      line-height: 1.3 !important;
    }
  }
</style>

<script>
  // Sector filtering functionality
  document.addEventListener('DOMContentLoaded', function() {
    const filterBtns = document.querySelectorAll('.filter-btn');
    const fairCards = document.querySelectorAll('.fair-card');

    filterBtns.forEach(btn => {
      btn.addEventListener('click', () => {
        // Remove active class from all buttons
        filterBtns.forEach(b => b.classList.remove('active'));
        // Add active class to clicked button
        btn.classList.add('active');

        const selectedSector = btn.getAttribute('data-sector');

        // Show/hide cards based on sector
        fairCards.forEach(card => {
          const cardElement = card as HTMLElement;
          if (selectedSector === 'all' || cardElement.getAttribute('data-sector') === selectedSector) {
            cardElement.style.display = 'block';
          } else {
            cardElement.style.display = 'none';
          }
        });
      });
    });
  });
</script>
